set nocompatible                                " turn off VI compatibility mode
call pathogen#infect()                          " load Pathogen bundles
filetype plugin indent on                       " use filetype detection and load plugins and indent for them
au BufRead,BufNewFile *.scss set filetype=scss  " manually define scss filetype detection
set directory^=$HOME/.vim/.swp//                " centralize swp file location

" Appearance
syntax on                                       " turn on syntax highlighting
set t_Co=256                                    " use 256 colors
let g:solarized_termcolors=256                  " limit Solarized theme to 256 colors
set background=dark                             " dark background
colorscheme solarized                           " and Solarized as default theme

" Text formatting
set ai                                          " auto-indent
set si                                          " smart indentation
set expandtab                                   " use soft tabs
set softtabstop=2                               " that are 2 spaces wide
set shiftwidth=2                                " auto-indent and shift by 2 spaces
set list                                        " show non-printed chars
set listchars=tab:>-,trail:Â·                    " specifically, tabs and trailing whitespace
set nowrap                                      " turn off line wrapping

" UI
set mouse=a                                     " use mouse in all modes
set wildmode=longest,list,full                  " tab completeion: 1) bash-like, 2) list, 3) wildmenu
set wildmenu                                    " use wildmenu (3rd tab)
set number                                      " turn on line numbers
set cursorline                                  " highlight current line
set laststatus=2                                " always show statusline
set noshowmode                                  " but not mode
set clipboard=unnamed                           " use OS clipboard by default
let g:ctrlp_show_hidden = 1                     " show dotfiles in ctrlp

" Set cursor to a line in edit mode
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Toggle status line
map <Leader>s :call ToggleStatusline()<CR>
function! ToggleStatusline()
  if &laststatus == 2
    set laststatus=0
  else
    set laststatus=2
  endif
endfunction

" Custom key mapping
inoremap jj <Esc>
nnoremap <Leader>d :NERDTreeToggle<CR>
" Tabularize
nmap <Leader>a= :Tabularize /=<CR>
vmap <Leader>a= :Tabularize /=<CR>
nmap <Leader>a{ :Tabularize /{<CR>
vmap <Leader>a{ :Tabularize /{<CR>
nmap <Leader>a: :Tabularize /:\zs<CR>
vmap <Leader>a: :Tabularize /:\zs<CR>
nmap <Leader>a, :Tabularize /,\zs<CR>
vmap <Leader>a, :Tabularize /,\zs<CR>
nmap <Leader>a> :Tabularize /[=-]><CR>
vmap <Leader>a> :Tabularize /[=-]><CR>
nmap <Leader>a\| :Tabularize /\|<CR>
vmap <Leader>a\| :Tabularize /\|<CR>
" remove superfluous whitespace
map <Leader><Space> :%s/\s\+$//g<CR>
" Visual indent
vnoremap < <gv
vnoremap > >gv
